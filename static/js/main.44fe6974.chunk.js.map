{"version":3,"sources":["store.js","redusers/books-list.js","redusers/shopping-cart.js","redusers/index.js","redusers/reduser.js","components/shop-header/index.js","components/shop-header/shop-header.js","actions/index.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","utils/compose.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/spiner/index.js","components/spiner/spiner.js","components/book-list/book-list.js","components/book-list/index.js","components/pages/home-page.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","index.js","services/bookstore-service.js"],"names":["timeout","updateBooksList","state","action","undefined","books","loading","error","type","payload","booksList","updateOrder","bookId","quantity","cartItems","shoppingCart","book","find","id","itemIndex","findIndex","newItems","items","item","idx","count","slice","updateCartItems","title","total","price","toFixed","updateItem","newTotal","booksArr","moneyArr","forEach","push","totalReduser","arr","reduce","accum","current","money","updateTotal","orderTotal","booksTotal","updateShoppingCart","reduser","store","createStore","applyMiddleware","thunkMiddleware","dispatch","console","log","getState","setTimeout","ShopHeader","connect","numItems","className","to","fetchBooks","bookstoreService","getBooks","then","responce","catch","err","bookAddedToCart","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","compose","funcs","comp","reduceRight","wrappedFunc","nextFunc","BookListItem","onAddedToCart","author","cover","src","alt","onClick","ErrorIndicator","Spiner","BookList","map","key","BookListContainer","this","Component","HomePage","mapDispathToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","renderRow","CartPage","App","role","exact","path","component","from","ErrorBoundry","hasError","setState","children","data","Promise","resolve","reject","Math","round","random","Error","ReactDOM","render","value","basename","process","document","querySelector"],"mappings":"wRAmB8BA,E,+DCiBfC,EApCS,SAACC,EAAOC,GAC9B,QAAcC,IAAVF,EACF,MAAO,CACLG,MAAO,GACPC,SAAS,EACTC,MAAO,MAIX,OAAQJ,EAAOK,MACb,IAAK,sBACH,MAAO,CACLH,MAAOF,EAAOM,QACdH,SAAS,EACTC,MAAO,MAGX,IAAK,sBACH,MAAO,CACLF,MAAO,GACPC,SAAS,EACTC,MAAO,MAGX,IAAK,sBACH,MAAO,CACLF,MAAO,GACPC,SAAS,EACTC,MAAOJ,EAAOM,SAGlB,QACE,OAAOP,EAAMQ,Y,QCkBbC,EAAc,SAACT,EAAOU,EAAQC,GAAc,IAC3BR,EAAyCH,EAAtDQ,UAAaL,MAAyBS,EAAgBZ,EAAhCa,aAAgBD,UACxCE,EAAOX,EAAMY,MAAK,qBAAGC,KAAgBN,KACrCO,EAAYL,EAAUM,WAAU,qBAAGF,KAAgBN,KAInDS,EAzDgB,SAACC,EAAOC,EAAMC,GACpC,OAAa,IAATA,EACI,GAAN,mBACKF,GADL,CAEEC,IAIe,IAAfA,EAAKE,MACD,GAAN,mBACKH,EAAMI,MAAM,EAAGF,IADpB,YAEKF,EAAMI,MAAMF,EAAM,KAInB,GAAN,mBACKF,EAAMI,MAAM,EAAGF,IADpB,CAEED,GAFF,YAGKD,EAAMI,MAAMF,EAAM,KAuCNG,CAAgBb,EAnChB,WAAgC,IAA/BS,EAA8B,uDAAvB,GAAIP,EAAmB,uCAAbH,EAAa,yCACmBU,EAA3DL,UADwC,MACnCF,EAAKE,GAD8B,IACmBK,EAA7CE,aAD0B,MAClB,EADkB,IACmBF,EAAlCK,aADe,MACPZ,EAAKY,MADE,IACmBL,EAAdM,aADL,MACa,EADb,EAGhD,MAAO,CACLX,KACAU,QACAH,MAAOA,EAAQZ,EACfgB,QAASA,EAAQhB,EAAWG,EAAKc,OAAOC,QAAQ,IA2BlCC,CAFHlB,EAAUK,GAEUH,EAAMH,GACcM,GAC/Cc,EAzBY,SAACX,GACnB,IAAIY,EAAW,GACXC,EAAW,GACfb,EAAMc,SAAQ,SAAAb,GACZW,EAASG,KAAKd,EAAKE,OACnBU,EAASE,KAAKd,EAAKM,UAErB,IAAMS,EAAe,SAACC,GACpB,OAAOA,EAAIC,QAAO,SAACC,EAAOC,GAAR,OAAoBD,EAAQC,IAAS,IAEzD,MAAO,CACLrC,MAAOiC,EAAaJ,GACpBS,MAAOL,EAAaH,IAaLS,CAAYvB,GAC7B,MAAO,CACLP,UAAWO,EACXwB,WAAYZ,EAASU,MAAMZ,QAAQ,GACnCe,WAAYb,EAAS5B,QA6BV0C,EAzBY,SAAC7C,EAAOC,GACjC,QAAcC,IAAVF,EACF,MAAO,CACLY,UAAW,GACX+B,WAAY,EACZC,WAAY,GAIhB,OAAQ3C,EAAOK,MACb,IAAK,qBACH,OAAOG,EAAYT,EAAOC,EAAOM,QAAS,GAE5C,IAAK,yBACH,OAAOE,EAAYT,EAAOC,EAAOM,SAAU,GAE7C,IAAK,8BACH,IAAMc,EAAOrB,EAAMa,aAAaD,UAAUG,MAAK,qBAAGC,KAAgBf,EAAOM,WACzE,OAAOE,EAAYT,EAAOC,EAAOM,SAAUc,EAAKE,OAElD,QACE,OAAOvB,EAAMa,eCtFJiC,ECEC,SAAC9C,EAAOC,GACtB,MAAO,CACLO,UAAWT,EAAgBC,EAAOC,GAClCY,aAAcgC,EAAmB7C,EAAOC,KJWtC8C,EAAQC,YAAYF,EAASG,YAAgBC,KAT1B,kBAAM,SAACC,GAAD,OAAc,SAAClD,GAC5C,OACSkD,EADa,kBAAXlD,EACO,CACdK,KAAML,GAGMA,QAVI,SAAC8C,GAAD,OAAW,SAACI,GAAD,OAAc,SAAClD,GAE9C,OADAmD,QAAQC,IAAIpD,EAAOK,KAAMyC,EAAMO,YACxBH,EAASlD,SAoBlB8C,EAAMI,UAPwBrD,EAOM,IAPM,SAACqD,GACzCI,YAAW,kBAAMJ,EAAS,CACtB7C,KAAM,qBACJR,MAMOiD,Q,OK3BAS,G,MC4BAC,aARS,SAAC,GAAkD,IAAD,IAA/C5C,aAAgB8B,EAA+B,EAA/BA,WAEzC,MAAO,CACLe,SAHsE,EAAnBd,WAInDjB,MAAOgB,KAIIc,EAtBI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAU/B,EAAY,EAAZA,MAC9B,OACE,4BAAQgC,UAAU,mBAChB,kBAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAG,KAApC,WAGA,kBAAC,IAAD,CAAMD,UAAU,gBAAgBC,GAAG,SACjC,uBAAGD,UAAU,kCACZD,EAFH,WAEqB/B,EAFrB,U,gCCCAkC,EAAa,SAACV,EAAUW,GAAX,OAAgC,WACjDX,EAV4B,CAC5B7C,KAAM,wBAUNwD,EAAiBC,WACdC,MAAK,SAAAC,GAAQ,OAAId,EAjBa,CACjC7C,KAAM,sBACNC,QAeyC0D,OACtCC,OAAM,SAAAC,GAEL,MADAhB,EAVyB,CAC7B7C,KAAM,sBACNC,QAQwB4D,IACdA,OAINC,EAAkB,SAAC1D,GACvB,MAAO,CACLJ,KAAM,qBACNC,QAASG,I,ECtBT2D,IAAMC,gBAFEC,E,EAAVC,SACUC,E,EAAVC,SCeaC,EAfc,kBAAM,SAACC,GAElC,OAAO,SAACC,GACN,OACE,kBAACJ,EAAD,MAEI,SAACX,GACC,OAAO,kBAACc,EAAD,iBAAaC,EAAb,CAAoBf,iBAAkBA,WCL1CgB,EANC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC7B,OAAOD,EAAME,aACX,SAACC,EAAaC,GAAd,OAA2BA,EAASD,KAAcF,KCDvCI,G,MCIM,SAAC,GAA6B,IAA3BtE,EAA0B,EAA1BA,KAAMuE,EAAoB,EAApBA,cACpB3D,EAAgCZ,EAAhCY,MAAO4D,EAAyBxE,EAAzBwE,OAAQ1D,EAAiBd,EAAjBc,MAAO2D,EAAUzE,EAAVyE,MAC9B,OACE,yBAAK5B,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAK6B,IAAKD,EAAOE,IAAI,gBAEvB,yBAAK9B,UAAU,gBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcjC,GACrC,yBAAKiC,UAAU,eAAe2B,GAC9B,yBAAK3B,UAAU,cAAf,IAA8B/B,GAC9B,4BACE8D,QAASL,EACT1B,UAAU,4BAFZ,mBCfOgC,G,MCGQ,WACrB,OACE,yBAAKhC,UAAU,mBACb,wBAAIA,UAAU,0BAAd,qGACA,uBAAGA,UAAU,+CACb,wBAAIA,UAAU,6BAAd,gHACA,0BAAMA,UAAU,yBAAhB,2VCTUiC,G,MCGD,WACb,OACE,yBAAKjC,UAAU,UACb,uBAAGA,UAAU,oBCWbkC,G,MAAW,SAAC,GAA4B,IAA3B1F,EAA0B,EAA1BA,MAAOkF,EAAmB,EAAnBA,cAExB,OACE,wBAAI1B,UAAU,aAEVxD,EAAM2F,KAAI,SAAChF,GACT,OACE,wBAAIiF,IAAKjF,EAAKE,IACZ,kBAAC,EAAD,CACEqE,cAAe,kBAAMA,EAAcvE,EAAKE,KACxCF,KAAMA,WAShBkF,E,kLAGFC,KAAKpB,MAAMhB,e,+BAGH,IAAD,EAC0CoC,KAAKpB,MAA9C1E,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,MAAOgF,EADxB,EACwBA,cAC/B,OAAIjF,EAEA,kBAAC,EAAD,MAIAC,EAEA,kBAAC,EAAD,MAKF,kBAAC,EAAD,CAAUF,MAAOA,EAAOkF,cAAeA,Q,GArBba,aCpCjBL,ED6EAf,EACbH,IACAlB,aAVsB,SAAC,GAAmB,IAAjBjD,EAAgB,EAAhBA,UACzB,MAAO,CACLL,MAAOK,EAAUL,MACjBC,QAASI,EAAUJ,QACnBC,MAAOG,EAAUH,UAXM,SAAC8C,EAAD,GAAqC,IAAxBW,EAAuB,EAAvBA,iBACtC,MAAO,CACLD,WAAYA,EAAWV,EAAUW,GACjCuB,cAAe,SAACrE,GAAD,OAAQmC,EAASiB,EAAgBpD,SAYrC8D,CAGbkB,GEnEaG,EATE,WACf,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,QCsEAC,G,MAAoB,CACxBC,WAAYjC,EACZkC,WbjD0B,SAAC5F,GAC3B,MAAO,CACLJ,KAAM,yBACNC,QAASG,Ia+CX6F,Sb3C8B,SAAC7F,GAC/B,MAAO,CACLJ,KAAM,8BACNC,QAASG,McxCE8F,EDmFA/C,aAbS,SAAC,GAAiD,IAAD,IAA9C5C,aACzB,MAAO,CACLO,MAFqE,EAA9BR,UAGvCe,MAHqE,EAAnBgB,cAadyD,EAAzB3C,EA5EW,SAAC,GAAwD,IAAtDrC,EAAqD,EAArDA,MAAOO,EAA8C,EAA9CA,MAAO2E,EAAuC,EAAvCA,WAAYD,EAA2B,EAA3BA,WAAYE,EAAe,EAAfA,SA+BjE,OACE,yBAAK5C,UAAU,uBACb,0CAEA,2BAAOA,UAAU,SACf,+BACE,4BACE,kCACA,oCACA,qCACA,qCACA,wCAIJ,+BAEIvC,EAAM0E,KAAI,SAACzE,EAAMC,GACf,OA/CM,SAACD,EAAMC,GAAS,IACxBN,EAA4BK,EAA5BL,GAAIU,EAAwBL,EAAxBK,MAAOH,EAAiBF,EAAjBE,MAAOI,EAAUN,EAAVM,MAC1B,OACE,wBAAIoE,IAAK/E,GACP,4BAAKM,EAAM,GACX,4BAAKI,GACL,4BAAKH,GACL,gCAAMI,GACN,4BACE,4BACE+D,QAAS,kBAAMa,EAASvF,IACxB2C,UAAU,6CACV,uBAAGA,UAAU,mBAEf,4BACE+B,QAAS,kBAAMW,EAAWrF,IAC1B2C,UAAU,8CACV,uBAAGA,UAAU,uBAEf,4BACE+B,QAAS,kBAAMY,EAAWtF,IAC1B2C,UAAU,8CACV,uBAAGA,UAAU,0BAyBJ8C,CAAUpF,EAAMC,QAM/B,yBAAKqC,UAAU,SAAf,WACWhC,OEtDF+E,EANE,WACf,OACE,kBAAC,EAAD,OCLWC,ECKH,WACV,OACE,0BAAMC,KAAK,OAAOjD,UAAU,gCAC1B,kBAAC,EAAD,CAAYD,SAAU,EAAG/B,MAAO,MAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,QAAQC,UAAWZ,IACrC,kBAAC,IAAD,CAAOW,KAAK,QAAQC,UAAWL,IAC/B,kBAAC,IAAD,CAAUM,KAAK,IAAIpD,GAAG,aCZfqD,E,4MCKbjH,MAAQ,CACNkH,UAAU,G,kEAIVjB,KAAKkB,SAAS,CAAED,UAAU,M,+BAI1B,OAAIjB,KAAKjG,MAAMkH,SACN,kBAAC,EAAD,MAEFjB,KAAKpB,MAAMuC,a,GAdoB/C,IAAM6B,WCQ1CpC,EAAmB,I,iDCVvBuD,KAAO,CACL,CACErG,GAAI,EACJU,MAAO,iCACP4D,OAAQ,kBACR1D,MAAO,MACP2D,MAAO,4FAET,CACEvE,GAAI,EACJU,MAAO,cACP4D,OAAQ,oBACR1D,MAAO,MACP2D,MAAO,6F,uDAIC,IAAD,OAST,OARgB,IAAI+B,SAAQ,SAACC,EAASC,GAClBC,KAAKC,MAAsB,IAAhBD,KAAKE,UAClB,GACdpE,YAAW,kBAAMgE,EAAQ,EAAKF,QAAO,KAErC9D,YAAW,kBAAMiE,EAAO,IAAII,MAAM,8BAA6B,Y,MDXvExE,QAAQC,IAAI,6BAEZwE,IAASC,OACP,kBAAC,IAAD,CAAU/E,MAAOA,GACf,kBAAC,EAAD,KACE,kBAACwB,EAAD,CAA0BwD,MAAOjE,GAC/B,kBAAC,IAAD,CAAQkE,SAAUC,gBAChB,kBAAC,EAAD,UAKRC,SAASC,cAAc,Y","file":"static/js/main.44fe6974.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reduser from './redusers';\r\n\r\nconst LogMiddleware = (store) => (dispatch) => (action) => {\r\n  console.log(action.type, store.getState());\r\n  return dispatch(action);\r\n}\r\nconst stringMiddleware = () => (dispatch) => (action) => {\r\n  if (typeof action === 'string') {\r\n    return dispatch({\r\n      type: action,\r\n    });\r\n  }\r\n  return dispatch(action);\r\n}\r\n\r\nconst store = createStore(reduser, applyMiddleware(thunkMiddleware, stringMiddleware, LogMiddleware));\r\n\r\nconst timeoutActionCreator = (timeout) => (dispatch) => {\r\n  setTimeout(() => dispatch({\r\n      type: 'TIMEOUT_ACTION'\r\n    }), timeout)\r\n  }\r\n\r\n\r\nstore.dispatch(timeoutActionCreator(3000));\r\n\r\nexport default store;","const updateBooksList = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      }\r\n\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return {\r\n        books: [],\r\n        loading: true,\r\n        error: null,\r\n      }\r\n\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return {\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state.booksList\r\n  }\r\n}\r\n\r\nexport default updateBooksList","const updateCartItems = (items, item, idx) => {\r\n  if (idx === -1) {\r\n    return [\r\n      ...items,\r\n      item\r\n    ]\r\n  }\r\n\r\n  if (item.count === 0) {\r\n    return [\r\n      ...items.slice(0, idx),\r\n      ...items.slice(idx + 1),\r\n    ]\r\n  }\r\n\r\n  return [\r\n    ...items.slice(0, idx),\r\n    item,\r\n    ...items.slice(idx + 1),\r\n  ]\r\n}\r\n\r\nconst updateItem = (item = {}, book, quantity) => {\r\n  const { id = book.id, count = 0, title = book.title, total = 0 } = item;\r\n\r\n  return {\r\n    id,\r\n    title,\r\n    count: count + quantity,\r\n    total: +(total + quantity * book.price).toFixed(2),\r\n  }\r\n}\r\n\r\nconst updateTotal = (items) => {\r\n  let booksArr = [];\r\n  let moneyArr = [];\r\n  items.forEach(item => {\r\n    booksArr.push(item.count);\r\n    moneyArr.push(item.total);\r\n  });\r\n  const totalReduser = (arr) => {\r\n    return arr.reduce((accum, current) => accum + current, 0)\r\n  }\r\n  return {\r\n    books: totalReduser(booksArr),\r\n    money: totalReduser(moneyArr),\r\n  }\r\n}\r\n\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n  const { booksList: { books }, shoppingCart: { cartItems } } = state;\r\n  const book = books.find(({ id }) => id === bookId);\r\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\r\n  const item = cartItems[itemIndex];\r\n\r\n  const newItem = updateItem(item, book, quantity);\r\n  const newItems = updateCartItems(cartItems, newItem, itemIndex)\r\n  const newTotal = updateTotal(newItems);\r\n  return {\r\n    cartItems: newItems,\r\n    orderTotal: newTotal.money.toFixed(2),\r\n    booksTotal: newTotal.books,\r\n  }\r\n}\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      orderTotal: 0,\r\n      booksTotal: 0,\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'BOOK_ADDED_TO_CART':\r\n      return updateOrder(state, action.payload, 1)\r\n\r\n    case 'BOOK_REMOVED_FROM_CART':\r\n      return updateOrder(state, action.payload, -1)\r\n\r\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n      const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload);\r\n      return updateOrder(state, action.payload, -item.count)\r\n\r\n    default:\r\n      return state.shoppingCart\r\n  }\r\n}\r\n\r\nexport default updateShoppingCart","import reduser from './reduser';\r\nexport default reduser;","import updateBooksList from './books-list';\r\nimport updateShoppingCart from './shopping-cart';\r\n\r\nconst reduser = (state, action) => {\r\n  return {\r\n    booksList: updateBooksList(state, action),\r\n    shoppingCart: updateShoppingCart(state, action),\r\n  }\r\n};\r\n\r\nexport default reduser","import ShopHeader from './shop-header';\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport './shop-header.css';\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n  return (\r\n    <header className=\"shop-header row\">\r\n      <Link className=\"logo text-dark\" to=\"/\">\r\n        ReStore\r\n      </Link>\r\n      <Link className=\"shopping-cart\" to=\"/cart\">\r\n        <i className=\"cart-icon fa fa-shopping-cart\" />\r\n        {numItems} item (${total})\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { orderTotal, booksTotal } }) => {\r\n\r\n  return {\r\n    numItems: booksTotal,\r\n    total: orderTotal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopHeader);","const booksLoaded = (newBooks) => ({\r\n  type: 'FETCH_BOOKS_SUCCESS',\r\n  payload: newBooks\r\n});\r\n\r\nconst booksRequested = () => ({\r\n  type: 'FETCH_BOOKS_REQUEST'\r\n});\r\n\r\nconst booksError = (error) => ({\r\n  type: 'FETCH_BOOKS_FAILURE',\r\n  payload: error\r\n});\r\n\r\nconst fetchBooks = (dispatch, bookstoreService) => () => {\r\n  dispatch(booksRequested());\r\n  bookstoreService.getBooks()\r\n    .then(responce => dispatch(booksLoaded(responce)))\r\n    .catch(err => {\r\n      dispatch(booksError(err));\r\n      throw err;\r\n    });\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_ADDED_TO_CART',\r\n    payload: bookId\r\n  }\r\n}\r\n\r\nconst bookRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_REMOVED_FROM_CART',\r\n    payload: bookId\r\n  }\r\n}\r\n\r\nconst allBooksRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n    payload: bookId\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  fetchBooks,\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  allBooksRemovedFromCart,\r\n}","import React from 'react'\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  BookstoreServiceProvider,\r\n  BookstoreServiceConsumer\r\n}","import React from 'react';\r\n\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n  return (props) => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {\r\n          (bookstoreService) => {\r\n            return <Wrapped {...props} bookstoreService={bookstoreService} />\r\n          }\r\n        }\r\n      </BookstoreServiceConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withBookstoreService;","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight(\r\n    (wrappedFunc, nextFunc) => nextFunc(wrappedFunc), comp\r\n  );\r\n}\r\n\r\nexport default compose;","import BookListItem from './book-list-item';\r\nexport default BookListItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n  const { title, author, price, cover } = book;\r\n  return (\r\n    <div className=\"book-list-item\">\r\n      <div className=\"book-cover\">\r\n        <img src={cover} alt=\"book cover\" />\r\n      </div>\r\n      <div className=\"book-details\">\r\n        <Link to=\"/\" className=\"book-litle\">{title}</Link>\r\n        <div className=\"book-author\">{author}</div>\r\n        <div className=\"book-price\">${price}</div>\r\n        <button\r\n          onClick={onAddedToCart}\r\n          className=\"add-to-cart btn btn-info\" >\r\n          Add to cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookListItem;","import ErrorIndicator from './error-indicator';\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <h5 className=\"error-indicator__title\">Что то пошло не так...</h5>\r\n      <i className=\"error-indicator__icon fa fa-cloud-download\" />\r\n      <h6 className=\"error-indicator__subtitle\">Скоро мы все починим :)</h6>\r\n      <span className=\"error-indicator__text\">Попробуйте начать с главной страницы, или повторите запрос позже.</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorIndicator;","import Spiner from './spiner';\r\nexport default  Spiner;","import React from 'react';\r\n\r\nimport './spiner.css';\r\n\r\nconst Spiner = () => {\r\n  return (\r\n    <div className=\"spiner\">\r\n      <i className=\"spiner__elem\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spiner;","//PACKAGES\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//COMPONENTS\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { compose } from '../../utils';\r\n\r\nimport BookListItem from '../book-list-item';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport Spiner from '../spiner';\r\n\r\n//STYLES\r\nimport './book-list.css';\r\n\r\n\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n  \r\n  return (\r\n    <ul className=\"book-list\">\r\n      {\r\n        books.map((book) => {\r\n          return (\r\n            <li key={book.id}>\r\n              <BookListItem\r\n                onAddedToCart={() => onAddedToCart(book.id)}\r\n                book={book} />\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props;\r\n    if (loading) {\r\n      return (\r\n        <Spiner />\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <ErrorIndicator />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <BookList books={books} onAddedToCart={onAddedToCart} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n  return {\r\n    fetchBooks: fetchBooks(dispatch, bookstoreService),\r\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id)),\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ booksList }) => {\r\n  return {\r\n    books: booksList.books,\r\n    loading: booksList.loading,\r\n    error: booksList.error,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withBookstoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(BookListContainer);","import BookList from './book-list';\r\nexport default BookList;","import React, { Fragment } from 'react';\r\n\r\nimport BookList from '../book-list';\r\n\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Fragment>\r\n      <BookList />\r\n      \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './shopping-cart-table.css';\r\n\r\nimport { bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart } from '../../actions';\r\n\r\n\r\nconst ShoppingCartTable = ({ items, total, onDecrease, onIncrease, onDelete }) => {\r\n\r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item;\r\n    return (\r\n      <tr key={id}>\r\n        <th>{idx + 1}</th>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>${total}</td>\r\n        <td>\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onIncrease(id)}\r\n            className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onDecrease(id)}\r\n            className=\"btn btn-outline-warning btn-sm float-right\">\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Your Order</h2>\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th> #</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Total</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {\r\n            items.map((item, idx) => {\r\n              return renderRow(item, idx)\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">\r\n        Total: ${total}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n  return {\r\n    items: cartItems,\r\n    total: orderTotal,\r\n  }\r\n}\r\n\r\nconst mapDispathToProps = {\r\n  onIncrease: bookAddedToCart,\r\n  onDecrease: bookRemovedFromCart,\r\n  onDelete: allBooksRemovedFromCart,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(ShoppingCartTable);","import ShoppingCartTable from './shopping-cart-table';\r\nexport default ShoppingCartTable ;","import React from 'react';\r\n\r\nimport ShoppingCartTable from '../shopping-cart-table';\r\n\r\nconst CartPage = () => {\r\n  return (\r\n    <ShoppingCartTable />\r\n  );\r\n}\r\n\r\nexport default CartPage;","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport ShopHeader from '../shop-header';\r\nimport { HomePage, CartPage } from '../pages';\r\n\r\nconst App = () => {\r\n  return (\r\n    <main role=\"main\" className=\"container d-flex flex-column\">\r\n      <ShopHeader numItems={2} total={243}/>\r\n      <Switch>\r\n        <Route exact path=\"/home\" component={HomePage} />\r\n        <Route path=\"/cart\" component={CartPage} />\r\n        <Redirect from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry';\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends React.Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n    return this.props.children\r\n  }\r\n}","import { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nconst bookstoreService = new BookstoreService();\n\nconsole.log('Hello! Welcome to ReStore')\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router basename={process.env.PUBLIC_URL + '/#/'}>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.querySelector('.root')\n);\n\n\n\n","export default class BookstoreService {\r\n\r\n  data = [\r\n    {\r\n      id: 1,\r\n      title: 'Production-Ready Microservices',\r\n      author: 'Susan J. Fowler',\r\n      price: 31.49,\r\n      cover: 'https://images-na.ssl-images-amazon.com/images/I/51oxXEG6TRL._SX379_BO1,204,203,200_.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Release It!',\r\n      author: 'Michael T. Nygard',\r\n      price: 30.21,\r\n      cover: 'https://images-na.ssl-images-amazon.com/images/I/419zAwJJH4L._SX415_BO1,204,203,200_.jpg',\r\n    },\r\n  ]\r\n\r\n  getBooks() {\r\n    const request = new Promise((resolve, reject) => {\r\n      const randError = Math.round(Math.random() * 100);\r\n      if (randError < 86) {\r\n        setTimeout(() => resolve(this.data), 700)\r\n      } else {\r\n        setTimeout(() => reject(new Error('Service is not avalible')), 1000)\r\n      }\r\n    })\r\n    return request;\r\n  }\r\n}\r\n"],"sourceRoot":""}